using System;
using System.Collections.Generic;

public interface IObserver
{
    void Update(float temperature);
}

public interface ISubject
{
    void RegisterObserver(IObserver observer);
    void RemoveObserver(IObserver observer);
    void NotifyObservers();
}

public class WeatherStation : ISubject
{
    private List<IObserver> observers;
    private float temperature;

    public WeatherStation()
    {
        observers = new List<IObserver>();
    }

    public void RegisterObserver(IObserver observer)
    {
        if (observer == null)
        {
            throw new ArgumentNullException(nameof(observer), "–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å null");
        }

        if (!observers.Contains(observer))
        {
            observers.Add(observer);
            Console.WriteLine($"–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å {observer.GetType().Name} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.");
        }
    }

    public void RemoveObserver(IObserver observer)
    {
        if (observer == null)
        {
            throw new ArgumentNullException(nameof(observer), "–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å null");
        }

        if (observers.Contains(observer))
        {
            observers.Remove(observer);
            Console.WriteLine($"–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å {observer.GetType().Name} —É–¥–∞–ª–µ–Ω.");
        }
        else
        {
            Console.WriteLine("–ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.");
        }
    }

    public void NotifyObservers()
    {
        foreach (var observer in observers)
        {
            observer.Update(temperature);
        }
    }

    public void SetTemperature(float newTemperature)
    {
        if (newTemperature < -100 || newTemperature > 100)
        {
            throw new ArgumentException("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç -100 –¥–æ +100 –≥—Ä–∞–¥—É—Å–æ–≤.");
        }

        Console.WriteLine($"\n–ú–µ—Ç–µ–æ—Å—Ç–∞–Ω—Ü–∏—è: –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —Å {temperature}¬∞C –Ω–∞ {newTemperature}¬∞C");
        temperature = newTemperature;
        NotifyObservers();
    }

    public float GetCurrentTemperature()
    {
        return temperature;
    }
}

public class WeatherDisplay : IObserver
{
    private string _name;

    public WeatherDisplay(string name)
    {
        _name = name ?? throw new ArgumentNullException(nameof(name));
    }

    public void Update(float temperature)
    {
        Console.WriteLine($"{_name}: –ø–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã - {temperature}¬∞C");
        
        if (temperature > 30)
        {
            Console.WriteLine($"   {_name}: –í–Ω–∏–º–∞–Ω–∏–µ! –í—ã—Å–æ–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞!");
        }
        else if (temperature < 0)
        {
            Console.WriteLine($"   {_name}: –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –∑–∞–º–æ—Ä–æ–∑–∫–∞—Ö!");
        }
    }
}

public class EmailNotifier : IObserver
{
    private string _email;

    public EmailNotifier(string email)
    {
        _email = email ?? throw new ArgumentNullException(nameof(email));
    }

    public void Update(float temperature)
    {
        Console.WriteLine($"Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ {_email}: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –¥–æ {temperature}¬∞C");
    }
}

public class SoundAlarm : IObserver
{
    public void Update(float temperature)
    {
        if (temperature > 35 || temperature < -20)
        {
            Console.WriteLine($"üö® –ó–í–£–ö–û–í–û–ï –û–ü–û–í–ï–©–ï–ù–ò–ï: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {temperature}¬∞C!");
        }
    }
}

class WeatherMonitoringProgram
{
    static void Main(string[] args)
    {
        Console.WriteLine("–°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π");
        Console.WriteLine("=====================================");

        WeatherStation weatherStation = new WeatherStation();

        try
        {
            WeatherDisplay mobileApp = new WeatherDisplay("–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ");
            WeatherDisplay digitalBillboard = new WeatherDisplay("–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–µ —Ç–∞–±–ª–æ");
            EmailNotifier emailNotifier = new EmailNotifier("admin@weather.com");
            SoundAlarm soundAlarm = new SoundAlarm();

            weatherStation.RegisterObserver(mobileApp);
            weatherStation.RegisterObserver(digitalBillboard);

            Console.WriteLine("\n--- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã ---");
            weatherStation.SetTemperature(25.0f);
            weatherStation.SetTemperature(30.0f);

            Console.WriteLine("\n--- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–µ–π ---");
            weatherStation.RegisterObserver(emailNotifier);
            weatherStation.RegisterObserver(soundAlarm);

            weatherStation.SetTemperature(36.0f);

            Console.WriteLine("\n--- –£–¥–∞–ª–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–µ–π ---");
            weatherStation.RemoveObserver(digitalBillboard);

            weatherStation.SetTemperature(28.0f);

            Console.WriteLine("\n--- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä ---");
            weatherStation.SetTemperature(-25.0f);

            Console.WriteLine("\n--- –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è ---");
            WeatherDisplay nonExistent = new WeatherDisplay("–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π");
            weatherStation.RemoveObserver(nonExistent);

        }
        catch (Exception ex)
        {
            Console.WriteLine($"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {ex.Message}");
        }

        Console.WriteLine("\n–ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –¥–ª—è –≤—ã—Ö–æ–¥–∞...");
        Console.ReadKey();
    }
}
